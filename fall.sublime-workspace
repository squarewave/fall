{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sele",
				"selected_entities_count\ti32 selected_entities_count"
			],
			[
				"sel",
				"selection_rect"
			],
			[
				"an",
				"anchor_y\ti32 anchor_y"
			],
			[
				"ass",
				"asset_type"
			],
			[
				"px",
				"px_width\ti32 px_width"
			],
			[
				"ancho",
				"anchor_x"
			],
			[
				"anchor",
				"anchor_y"
			],
			[
				"anc",
				"anchor_x\ti32 anchor_x"
			],
			[
				"butt",
				"button_l\tButtonInput button_l"
			],
			[
				"mouse_",
				"mouse_world_position\tvec2 mouse_world_position(MeatSpace *meat_space)"
			],
			[
				"mou",
				"mouse_world"
			],
			[
				"mo",
				"mouse_world"
			],
			[
				"wor",
				"world_y"
			],
			[
				"windo",
				"window_height"
			],
			[
				"view",
				"viewport_bottom\tf32 viewport_bottom"
			],
			[
				"vi",
				"viewport_right\tf32 viewport_right"
			],
			[
				"scr",
				"screen_width\tf32 screen_width"
			],
			[
				"STAR",
				"START_WIDTH"
			],
			[
				"en",
				"entities\tMeatSpaceEntity [4096] entities"
			],
			[
				"Meat",
				"MeatSpaceEntity\tMeatSpaceEntity"
			],
			[
				"Mea",
				"MeatSpaceEntity\tMeatSpaceEntity"
			],
			[
				"MEMO",
				"MEMORY_SENTRY"
			],
			[
				"game",
				"game_alloc_"
			],
			[
				"g_d",
				"g_debug_print_ring_buffer_write_head\ti32 * g_debug_print_ring_buffer_write_head"
			],
			[
				"g",
				"g_debug_print_ring_buffer_write_head"
			],
			[
				"ImguiIm",
				"ImGui_ImplSdlGL3_Shutdown\tvoid ImGui_ImplSdlGL3_Shutdown()"
			],
			[
				"get",
				"get_imgui_io"
			],
			[
				"g_game",
				"g_game_code"
			],
			[
				"loc",
				"lock_file_name\tchar [260] lock_file_name"
			],
			[
				"load",
				"load_game_code"
			],
			[
				"main",
				"main_atlas\tArchiveEntryHeader_texture_atlas * main_atlas"
			],
			[
				"lock",
				"lock_file_name"
			],
			[
				"exe",
				"exe_directory_len"
			],
			[
				"DLL_NAME",
				"source_dll_name"
			],
			[
				"buff",
				"buffer_size"
			],
			[
				"debug",
				"debug_print_ring_buffer_write_head"
			],
			[
				"Render",
				"RenderCommands"
			],
			[
				"PlatformLast",
				"PlatformFileLastWriteTime\tPlatformFileLastWriteTime"
			],
			[
				"get_last_",
				"get_file_last_write_time\tFILETIME get_file_last_write_time(char *filepath)"
			],
			[
				"free",
				"free_file_memory\tPlatformFreeFileMemory * free_file_memory"
			],
			[
				"file",
				"file_has_been_touched\tPlatformFileHasBeenTouched * file_has_been_touched"
			],
			[
				"px_",
				"px_width\ti32 px_width"
			],
			[
				"filen",
				"filename_buffer"
			],
			[
				"cl",
				"asset_class\tAssetClass asset_class"
			],
			[
				"con",
				"contents\tunsigned char * contents"
			],
			[
				"v",
				"value\tint value"
			],
			[
				"SDL_Atomic",
				"SDL_AtomicGet\tint SDL_AtomicGet(SDL_atomic_t *a)"
			],
			[
				"_g_jt_",
				"_g_jt_job_semaphore"
			],
			[
				"_g",
				"_g_jt_job_semaphore"
			],
			[
				"com",
				"completion_routine"
			],
			[
				"t",
				"top\tint top"
			],
			[
				"stbi_fr",
				"stbi_image_free\tvoid stbi_image_free(void *retval_from_stbi_load)"
			],
			[
				"as",
				"asset_types_to_atlas_textures\tvoid * asset_types_to_atlas_textures"
			],
			[
				"archive",
				"archive_mem_head\tchar * archive_mem_head"
			],
			[
				"Asse",
				"AssetType\tAssetType"
			],
			[
				"AssetMove",
				"AssetMoveState_standing"
			],
			[
				"AssetD",
				"AssetDirection_left"
			],
			[
				"pac",
				"packed_images\tPackedTexture [0] packed_images"
			],
			[
				"p",
				"packed_images\tPackedTexture [0] packed_images"
			],
			[
				"stbi_",
				"stbi_load_from_memory\tstbi_uc * stbi_load_from_memory(const stbi_uc *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)"
			],
			[
				"writearc",
				"write_archive_mem\tvoid write_archive_mem(char *filepath)"
			],
			[
				"archi",
				"archive_mem_head\tchar * archive_mem_head"
			],
			[
				"stbiwritepng",
				"stbi_write_png_to_func\tint stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)"
			],
			[
				"TEXTURE_A",
				"TEXTURE_CHANNELS\tconst int TEXTURE_CHANNELS"
			],
			[
				"stbi_write_png",
				"stbi_write_png_to_mem\tunsigned char * stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)"
			],
			[
				"TEXTUREAT",
				"TEXTURE_ATLAS_SIZE_BYTES\tconst int TEXTURE_ATLAS_SIZE_BYTES"
			],
			[
				"TEXTURE_AT",
				"TEXTURE_ATLAS_SIZE_BYTES\tconst int TEXTURE_ATLAS_SIZE_BYTES"
			],
			[
				"working",
				"working_memory"
			],
			[
				"ArchiveEn",
				"ArchiveEntryHeader_texture_atlas\tArchiveEntryHeader_texture_atlas"
			],
			[
				"num",
				"num_rects"
			],
			[
				"bitm",
				"bitmap_count\tint bitmap_count"
			],
			[
				"stbrp_re",
				"stbrp_rect\tstbrp_rect"
			],
			[
				"rec",
				"rect_packer"
			],
			[
				"stbrp",
				"stbrp_node\tstbrp_node"
			],
			[
				"TEX",
				"TEXTURE_ATLAS_DIAMETER"
			],
			[
				"IMAGE_A",
				"IMAGE_ATLAS_MAP_SIZE"
			],
			[
				"IMA",
				"IMAGE_CHANNELS"
			],
			[
				"bi",
				"bitmaps\tBitmap [1024] bitmaps"
			],
			[
				"bit",
				"bitmap_count\tint bitmap_count"
			],
			[
				"fi",
				"filename"
			],
			[
				"stbi_load",
				"stbi_loadf_from_memory\tfloat * stbi_loadf_from_memory(const stbi_uc *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)"
			],
			[
				"stbi_load_",
				"stbi_load_from_file\tstbi_uc * stbi_load_from_file(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)"
			],
			[
				"stbi_set",
				"stbi_set_flip_vertically_on_load\tvoid stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)"
			],
			[
				"read",
				"read_entire_file\tEntireFile read_entire_file(char *filepath)"
			],
			[
				"conten",
				"content_size"
			],
			[
				"du",
				"dummy_texture_bitmap\tchar * dummy_texture_bitmap"
			],
			[
				"vie",
				"view_height\tf32 view_height"
			],
			[
				"GL_UNSIGNEDIN",
				"GL_UNSIGNED_INT\tGL_UNSIGNED_INT"
			],
			[
				"GL_DEPTH_BUF",
				"GL_DEPTH_BUFFER_BIT\tGL_DEPTH_BUFFER_BIT"
			],
			[
				"GL_DEPTH_B",
				"GL_DEPTH_BUFFER_BIT\tGL_DEPTH_BUFFER_BIT"
			],
			[
				"tex",
				"texture_handle"
			],
			[
				"vec",
				"vec4"
			],
			[
				"g_",
				"g_opengl_state"
			],
			[
				"set_camer",
				"set_camera_scale\tvoid set_camera_scale(RenderCommands *render_commands, f32 world_width, f32 world_height)"
			],
			[
				"check",
				"check_shader_status"
			],
			[
				"START",
				"START_WIDTH"
			],
			[
				"OpenGlP",
				"OpenGLProgramBase\tOpenGLProgramBase"
			],
			[
				"ver",
				"vertex_count\ti32 vertex_count"
			],
			[
				"verte",
				"vertex_array\tTexturedQuadVertex * vertex_array"
			],
			[
				"world",
				"world_x\tf32 world_x"
			],
			[
				"OpenGLP",
				"OpenGLProgramBase"
			],
			[
				"wind",
				"window_height"
			],
			[
				"pr",
				"program_id"
			],
			[
				"program_",
				"program_id\tGLuint program_id"
			],
			[
				"vertr",
				"vertex_shader_id\tGLuint vertex_shader_id"
			],
			[
				"fragment",
				"fragment_shader_id\tGLuint fragment_shader_id"
			],
			[
				"frag",
				"fragment_shader_id"
			],
			[
				"vertex",
				"vertex_sources\tGLchar *[3] vertex_sources"
			],
			[
				"c",
				"contents\tunsigned char * contents"
			],
			[
				"common",
				"common_source"
			],
			[
				"cont",
				"content_size\ti32 content_size"
			],
			[
				"Opengl",
				"OpenGLProgramType\tOpenGLProgramType"
			],
			[
				"comp",
				"compile_program_"
			],
			[
				"progr",
				"program_memory_used\ti32 program_memory_used"
			],
			[
				"progra",
				"program_memory\tchar [1024] program_memory"
			],
			[
				"openglprogra",
				"OpenGLProgramBase\tOpenGLProgramBase"
			],
			[
				"OpenGl",
				"OpenGLProgramType"
			],
			[
				"OpenGL",
				"OpenGLProgramBase\tOpenGLProgramBase"
			],
			[
				"worl",
				"world_width"
			],
			[
				"world_",
				"world_y\tf32 world_y"
			],
			[
				"vert",
				"vertex_array\tTexturedQuadVertex * vertex_array"
			],
			[
				"SDL_",
				"SDL_Window\tSDL_Window"
			],
			[
				"tabPro",
				"tabProfileDict"
			],
			[
				"mod",
				"module"
			],
			[
				"dismi",
				"dismissed"
			],
			[
				"PanelUI",
				"PanelUINotifications"
			],
			[
				"showUp",
				"showManualUpdateNotification"
			],
			[
				"noti",
				"notificationId"
			]
		]
	},
	"buffers":
	[
		{
			"file": "debug.h",
			"settings":
			{
				"buffer_size": 129,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "debug.cpp",
			"settings":
			{
				"buffer_size": 1122,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sdl_platform.cpp",
			"settings":
			{
				"buffer_size": 17173,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "libs/include/SDL2/SDL_atomic.h",
			"settings":
			{
				"buffer_size": 9458,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sdl_platform_input.h",
			"settings":
			{
				"buffer_size": 6706,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "input.h",
			"settings":
			{
				"buffer_size": 105,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "sdl_platform.h",
			"settings":
			{
				"buffer_size": 1239,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "jobthief.h",
			"settings":
			{
				"buffer_size": 7959,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fall.sublime-project",
			"settings":
			{
				"buffer_size": 154,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".clang_complete",
			"settings":
			{
				"buffer_size": 68,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "game.cpp",
			"settings":
			{
				"buffer_size": 3410,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "meat_space.h",
			"settings":
			{
				"buffer_size": 1114,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <assert.h>\n#include <minwindef.h>\n\n#include \"asset_manager.h\"\n#include \"game_math.h\"\n#include \"imgui_extensions.h\"\n#include \"meat_space.h\"\n#include \"render_commands.h\"\n\nvec2 mouse_world_position(MeatSpace* meat_space) {\n  f32 viewport_width = meat_space->camera.viewport_right - meat_space->camera.viewport_left;\n  f32 viewport_height = meat_space->camera.viewport_top - meat_space->camera.viewport_bottom;\n  f32 x_norm = clamp((g_input->mouse.x - meat_space->camera.viewport_left) / viewport_width, 0.0f, 1.0f) - 0.5f;\n  f32 y_norm = clamp((g_input->mouse.y - meat_space->camera.viewport_bottom) / viewport_height, 0.0f, 1.0f) - 0.5f;\n  f32 world_x = x_norm * meat_space->camera.scale.x + meat_space->camera.position.x;\n  f32 world_y = y_norm * meat_space->camera.scale.y + meat_space->camera.position.y;\n  return vec2 {world_x, world_y};\n}\n\nvoid meat_space_update_and_render(MeatSpace* meat_space) {\n  MeatSpaceBrain_player* selecting_player = NULL;\n  rect2 selection_rect = {};\n\n  for (i32 i = 0; i < meat_space->brains_count; ++i) {\n    auto brain = meat_space->brains + i;\n\n    switch (brain->type) {\n      case MeatSpaceBrainType_player: {\n        auto player = &brain->player;\n        if (was_pressed(g_input->mouse.button_l)) {\n          player->selecting = true;\n          player->selection_start = mouse_world_position(meat_space);\n        }\n        if (was_released(g_input->mouse.button_l)) {\n          if (player->selecting) {\n            player->selecting = false;\n            player->selected_entities_count = 0;\n            selecting_player = player;\n          }\n        }\n\n        if (player->selecting || selecting_player) {\n          vec2 selection_end = mouse_world_position(meat_space);\n          selection_rect.bottom_left.x = min(player->selection_start.x, selection_end.x);\n          selection_rect.bottom_left.y = min(player->selection_start.y, selection_end.y);\n          selection_rect.top_right.x = max(player->selection_start.x, selection_end.x);\n          selection_rect.top_right.y = max(player->selection_start.y, selection_end.y);\n\n          AssetAttributes attrs = {};\n          attrs.direction = AssetDirection_horizontal;\n          auto horizontal_line = assets_get_texture(AssetType_selection_line, attrs);\n          attrs.direction = AssetDirection_vertical;\n          auto vertical_line = assets_get_texture(AssetType_selection_line, attrs);\n\n          {\n            // top line\n            f32 left = selection_rect.bottom_left.x;\n            f32 right = selection_rect.top_right.x - 0.5f;\n            f32 top = selection_rect.top_right.y;\n            f32 bottom = top - 0.5f;\n            push_textured_quad(g_render_commands,\n                               horizontal_line.handle,\n                               horizontal_line.left, horizontal_line.bottom, left, bottom, 0xffffffff,\n                               horizontal_line.right, horizontal_line.bottom, right, bottom, 0xffffffff,\n                               horizontal_line.left, horizontal_line.top, left, top, 0xffffffff,\n                               horizontal_line.right, horizontal_line.top, right, top, 0xffffffff);\n          }\n\n          {\n            // bottom line\n            f32 left = selection_rect.bottom_left.x + 0.5f;\n            f32 right = selection_rect.top_right.x;\n            f32 bottom = selection_rect.bottom_left.y;\n            f32 top = bottom + 0.5f;\n            push_textured_quad(g_render_commands,\n                               horizontal_line.handle,\n                               horizontal_line.left, horizontal_line.bottom, right, bottom, 0xffffffff,\n                               horizontal_line.right, horizontal_line.bottom, left, bottom, 0xffffffff,\n                               horizontal_line.left, horizontal_line.top, right, top, 0xffffffff,\n                               horizontal_line.right, horizontal_line.top, left, top, 0xffffffff);\n          }\n\n          {\n            // left line\n            f32 left = selection_rect.bottom_left.x;\n            f32 right = left + 0.5f;\n            f32 top = selection_rect.top_right.y - 0.5f;\n            f32 bottom = selection_rect.bottom_left.y;\n            push_textured_quad(g_render_commands,\n                               vertical_line.handle,\n                               vertical_line.left, vertical_line.bottom, left, bottom, 0xffffffff,\n                               vertical_line.right, vertical_line.bottom, right, bottom, 0xffffffff,\n                               vertical_line.left, vertical_line.top, left, top, 0xffffffff,\n                               vertical_line.right, vertical_line.top, right, top, 0xffffffff);\n          }\n\n          {\n            // right line\n            f32 right = selection_rect.top_right.x;\n            f32 left = right - 0.5f;\n            f32 top = selection_rect.top_right.y;\n            f32 bottom = selection_rect.bottom_left.y + 0.5f;\n            push_textured_quad(g_render_commands,\n                               vertical_line.handle,\n                               vertical_line.left, vertical_line.bottom, left, top, 0xffffffff,\n                               vertical_line.right, vertical_line.bottom, right, top, 0xffffffff,\n                               vertical_line.left, vertical_line.top, left, bottom, 0xffffffff,\n                               vertical_line.right, vertical_line.top, right, bottom, 0xffffffff);\n          }\n        }\n      } break;\n      default: assert(false);\n    }\n  }\n\n  for (int i = 0; i < meat_space->entities_count; ++i) {\n    auto entity = meat_space->entities + i;\n\n    if (selecting_player) {\n      if (is_in_rect(entity->p, selection_rect)) {\n        selecting_player->selected_entities[selecting_player->selected_entities_count++] = entity->id;\n        entity->selected = true;\n      } else {\n        entity->selected = false;\n      }\n    \n}\n    if (entity->selected) {\n      AssetAttributes attrs = {};\n      auto selection = assets_get_texture(AssetType_selection_circle, attrs);\n      f32 left = round(entity->p.x - ((f32)selection.px_width) / 2.0f);\n      f32 right = round(entity->p.x + ((f32)selection.px_width) / 2.0f);\n      f32 bottom = round(entity->p.y - ((f32)selection.px_height) / 2.0f);\n      f32 top = round(entity->p.y + ((f32)selection.px_height) / 2.0f);\n      push_textured_quad(g_render_commands,\n                         selection.handle,\n                         selection.left, selection.bottom, left, bottom, 0xffffffff,\n                         selection.right, selection.bottom, right, bottom, 0xffffffff,\n                         selection.left, selection.top, left, top, 0xffffffff,\n                         selection.right, selection.top, right, top, 0xffffffff);\n    }\n\n    {\n      auto tex = assets_get_texture(entity->asset_type, entity->asset_attributes);\n      f32 left = round(entity->p.x - tex.anchor_x);\n      f32 right = round(entity->p.x + tex.px_width - tex.anchor_x);\n      f32 bottom = round(entity->p.y - tex.anchor_y);\n      f32 top = round(entity->p.y + tex.px_height - tex.anchor_y);\n      push_textured_quad(g_render_commands,\n                         tex.handle,\n                         tex.left, tex.bottom, left, bottom, 0xffffffff,\n                         tex.right, tex.bottom, right, bottom, 0xffffffff,\n                         tex.left, tex.top, left, top, 0xffffffff,\n                         tex.right, tex.top, right, top, 0xffffffff);\n\n      ImGui::Image(assets_get_atlas(entity->asset_type));\n    }\n  }\n\n  set_camera_position(g_render_commands, meat_space->camera.position.x, meat_space->camera.position.y);\n  set_camera_scale(g_render_commands, meat_space->camera.scale.x, meat_space->camera.scale.y);\n}\n",
			"file": "meat_space.cpp",
			"file_size": 7675,
			"file_write_time": 131408535465737556,
			"settings":
			{
				"buffer_size": 7675,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "game_math.h",
			"settings":
			{
				"buffer_size": 410,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/assets/test_images.pak",
			"settings":
			{
				"buffer_size": 1627840,
				"encoding": "Hexadecimal",
				"line_ending": "Unix"
			}
		},
		{
			"file": "asset_manager.h",
			"settings":
			{
				"buffer_size": 563,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "asset_manager.cpp",
			"settings":
			{
				"buffer_size": 5325,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "memory.h",
			"settings":
			{
				"buffer_size": 1454,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "libs/include/Judy.h",
			"settings":
			{
				"buffer_size": 28038,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build_packager.bat",
			"settings":
			{
				"buffer_size": 555,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "asset_packager.cpp",
			"settings":
			{
				"buffer_size": 7440,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "assets.h",
			"settings":
			{
				"buffer_size": 2125,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui.ini",
			"settings":
			{
				"buffer_size": 140,
				"line_ending": "Windows"
			}
		},
		{
			"file": "imgui_memory_editor.h",
			"settings":
			{
				"buffer_size": 10265,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "render_commands.h",
			"settings":
			{
				"buffer_size": 1290,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "renderer_opengl.h",
			"settings":
			{
				"buffer_size": 840,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "renderer_opengl.cpp",
			"settings":
			{
				"buffer_size": 6948,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "shaders/common.glsl",
			"settings":
			{
				"buffer_size": 235,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "shaders/textured_quads.glsl",
			"settings":
			{
				"buffer_size": 471,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "render_commands.cpp",
			"settings":
			{
				"buffer_size": 1887,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui_impl_sdl_gl3.cpp",
			"settings":
			{
				"buffer_size": 16966,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "geometry.h",
			"settings":
			{
				"buffer_size": 396,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "game.h",
			"settings":
			{
				"buffer_size": 273,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui/imgui.cpp",
			"settings":
			{
				"buffer_size": 431460,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui/imgui_internal.h",
			"settings":
			{
				"buffer_size": 47500,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui/imgui.h",
			"settings":
			{
				"buffer_size": 129707,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui/imgui_draw.cpp",
			"settings":
			{
				"buffer_size": 109252,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fall.cpp",
			"settings":
			{
				"buffer_size": 179,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fall_game.cpp",
			"settings":
			{
				"buffer_size": 382,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.bat",
			"settings":
			{
				"buffer_size": 1211,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imgui_extensions.h",
			"settings":
			{
				"buffer_size": 197,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "imgui_extensions.cpp",
			"settings":
			{
				"buffer_size": 327,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "platform.h",
			"settings":
			{
				"buffer_size": 8832,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/ff-build-faster.sublime-build",
					""
				],
				[
					"Packages/User/ff-build.sublime-build",
					""
				],
				[
					"Packages/User/ff-run.sublime-build",
					""
				],
				[
					"Packages/User/ff-test-last.sublime-build",
					""
				],
				[
					"Packages/User/ff-test.sublime-build",
					""
				],
				[
					"Packages/User/gecko-profiler.sublime-build",
					""
				],
				[
					"Packages/User/lenzhound-run.sublime-build",
					""
				],
				[
					"Packages/User/physica-run.sublime-build",
					""
				],
				[
					"Packages/User/physica.sublime-build",
					""
				],
				[
					"Packages/User/webext.sublime-build",
					""
				]
			],
			[
				"Packages/User/ff-test.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/ff-build-faster.sublime-build",
					""
				],
				[
					"Packages/User/ff-build.sublime-build",
					""
				],
				[
					"Packages/User/ff-run.sublime-build",
					""
				],
				[
					"Packages/User/ff-test-last.sublime-build",
					""
				],
				[
					"Packages/User/ff-test.sublime-build",
					""
				],
				[
					"Packages/User/physica-run.sublime-build",
					""
				],
				[
					"Packages/User/physica.sublime-build",
					""
				]
			],
			[
				"Packages/User/ff-test-last.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "reind",
		"selected_items":
		[
			[
				"reind",
				"ReIndent: to 2"
			],
			[
				"rein",
				"ReIndent: to 2"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"eas",
				"EasyClangComplete: Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"wrap",
				"Wrap Plus: Wrap Lines"
			],
			[
				"json",
				"JSON Reindent: reindent file or selection"
			],
			[
				"diff",
				"Diffy Compare"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"build",
				"Build With: physica-run"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"gitgu",
				"GitGutter: Show Diff Popup"
			],
			[
				"git",
				"Git: Toggle Annotations"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"glue",
				"Glue - Launch"
			]
		],
		"width": 406.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/doug/Documents/github/fall",
		"/C/Users/doug/Documents/github/fall/assets",
		"/C/Users/doug/Documents/github/fall/build",
		"/C/Users/doug/Documents/github/fall/shaders"
	],
	"file_history":
	[
		"/C/Users/doug/Downloads/firefox-55.0a1.en-US.mac.complete.mar",
		"/C/Users/doug/Documents/github/fall/input.h",
		"/C/Users/doug/Documents/github/fall/region_space.h",
		"/C/Users/doug/Documents/github/fall/warp_space.h",
		"/C/Users/doug/Documents/github/fall/meat_space.h",
		"/C/Users/doug/Documents/github/fall/system_space.h",
		"/C/Users/doug/Documents/github/fall/sim_region.h",
		"/C/Users/doug/Documents/github/fall/platform.cpp",
		"/C/Users/doug/Documents/github/fall/build/assets/test_temp.bin",
		"/C/Users/doug/Documents/github/fall/asset_packager.h",
		"/C/Users/doug/Documents/github/fall/stb/stb_rect_pack.h",
		"/C/Users/doug/Documents/github/fall/packager/stb_image_write.h",
		"/C/Users/doug/Documents/github/fall/packager/stb_image.h",
		"/C/Users/doug/Documents/github/fall/packager/asset_packager.h",
		"/C/Users/doug/Documents/github/fall/packager/stb_rect_pack.h",
		"/C/Users/doug/Documents/github/fall/packager/build.bat",
		"/C/Users/doug/Documents/github/fall/packager/asset_packager.cpp",
		"/C/Users/doug/Documents/github/fall/shaders/common.vs.glsl",
		"/C/Users/doug/Documents/github/fall/shaders/common.fs.glsl",
		"/C/Users/doug/Documents/github/fall/shader_common.fs.glsl",
		"/C/Users/doug/Documents/github/fall/render_group.cpp",
		"/C/Users/doug/Documents/github/fall/render_group.h",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/head.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser.ini",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/tests/chrome/test_0172_notify_noPerms_manual.xul",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/tests/chrome/test_0171_check_noPerms_manual.xul",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/nsIUpdateService.idl",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/schemas/commands.json",
		"/C/Users/doug/mercurial/firefox/toolkit/modules/PopupNotifications.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/nsUpdateService.js",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/UpdateTelemetry.jsm",
		"/C/Users/doug/mercurial/firefox/browser/base/content/browser.js",
		"/C/Users/doug/mercurial/firefox/browser/locales/en-US/chrome/browser/browser.dtd",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesBackgroundWindow.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesBackgroundWindowFailures.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesCantApply.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesCompleteAndPartialPatchesWithBadCompleteSize.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesCompleteAndPartialPatchesWithBadPartialSize.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesDownloadFailures.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesPartialPatchApplyFailureWithCompleteAvailable.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/content/panelUI.css",
		"/C/Users/doug/mercurial/firefox/browser/themes/shared/customizableui/panelUI.inc.css",
		"/C/Users/doug/mercurial/firefox/browser/app/profile/firefox.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-commands.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/browser_ext_commands_onCommand.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/popupNotifications/browser_popupNotification_5.js",
		"/C/Users/doug/mercurial/firefox/browser/components/appUpdate/test/head.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/AppMenuNotifications.jsm",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesMalformedXml.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesBasicPrompt.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/moz.build",
		"/C/Users/doug/mercurial/firefox/addon-sdk/test/head.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesNewWindow.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/test/head.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/content/panelUI.js",
		"/C/Users/doug/mercurial/firefox/tools/profiler/gecko/nsProfiler.cpp",
		"/C/Users/doug/mercurial/firefox/browser/extensions/screenshots/webextension/manifest.json",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/tests/data/shared.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/test/browser_panelUINotifications.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesBasicPromptNoStaging.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/popupNotifications/browser_popupNotification.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/browser.xul",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ParseSymbols.jsm",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ParseSymbols-worker.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/schemas/geckoProfiler.json",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/xpcshell/test_ext_geckoProfiler_control.js",
		"/C/Users/doug/mercurial/firefox/toolkit/components/extensions/Extension.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/components/extensions/ExtensionPermissions.jsm",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/browser_ext_geckoProfiler_symbolicate.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-browser.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-geckoProfiler.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-devtools.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/moz.build",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/jar.mn",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ExtensionPopups.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/modules/Timer.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/modules/moz.build",
		"/C/Users/doug/mercurial/firefox/browser/components/moz.build",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/tests/chrome/test_0161_check_unsupported.xul",
		"/C/Users/doug/mercurial/firefox/toolkit/components/extensions/Schemas.jsm",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-tabs.js",
		"/C/Users/doug/mercurial/firefox/toolkit/components/extensions/ExtensionParent.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/crashreporter/google-breakpad/src/common/mac/dump_syms.cc",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/schemas/tabs.json",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/schemas/jar.mn",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/profilerSymbols.sjs",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/browser-common.ini",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/xpcshell/xpcshell.ini",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/file_inspectedwindow_reload_target.sjs",
		"/C/Users/doug/mercurial/firefox/toolkit/components/osfile/osfile.jsm",
		"/C/Users/doug/mercurial/firefox/js/xpconnect/src/Sandbox.cpp",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/CustomizableUI.jsm",
		"/C/Users/doug/mercurial/firefox/toolkit/components/extensions/ExtensionCommon.jsm",
		"/C/Users/doug/mercurial/firefox/tmplog.txt",
		"/C/Users/doug/mercurial/firefox/tools/profiler/gecko/nsIProfiler.idl",
		"/C/Users/doug/mercurial/firefox/tools/profiler/public/GeckoProfiler.h",
		"/C/Users/doug/mercurial/firefox/toolkit/crashreporter/google-breakpad/src/common/linux/dump_symbols.h",
		"/C/Users/doug/mercurial/firefox/tools/profiler/gecko/ProfileGatherer.cpp",
		"/C/Users/doug/mercurial/firefox/toolkit/crashreporter/google-breakpad/src/common/mac/dump_syms.h",
		"/C/Users/doug/mercurial/firefox/toolkit/crashreporter/google-breakpad/src/common/module.h",
		"/C/Users/doug/mercurial/firefox/toolkit/crashreporter/google-breakpad/src/common/mac/moz.build",
		"/C/Users/doug/mercurial/firefox/tools/profiler/gecko/nsProfiler.h",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-devtools-panels.js",
		"/C/Users/doug/mercurial/firefox/devtools/client/framework/target.js",
		"/C/Users/doug/mercurial/firefox/devtools/client/webide/modules/app-manager.js",
		"/C/Users/doug/mercurial/firefox/devtools/client/debugger/new/debugger.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/browser_updatesPartialPatchApplyFailureWithCompleteValidationFailure.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/browser_ext_profiler_symbolicate.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/browser/browser_ext_profiler_control.js",
		"/C/Program Files (x86)/Nightly/distribution/distribution.ini",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/test/xpcshell/test_ext_profiler_symbolicate.js",
		"/C/Users/doug/mercurial/firefox/toolkit/modules/ParseSymbols-worker.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ParseSymbols_worker.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/ext-profiler.js",
		"/C/Users/doug/mercurial/firefox/browser/components/extensions/schemas/profiler.json",
		"/C/Users/doug/mercurial/firefox/tools/profiler/gecko/Profiler.jsm",
		"/C/Users/doug/mercurial/firefox/browser/base/content/browser-fullScreenAndPointerLock.js",
		"/C/Users/doug/mercurial/firefox/browser/base/moz.build",
		"/C/Users/doug/mercurial/firefox/tools/lint/eslint.lint",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/.eslintrc.js",
		"/C/Users/doug/mercurial/firefox/testing/mochitest/browser-test.js",
		"/C/Users/doug/mercurial/firefox/node_modules/eslint-plugin-mozilla/lib/configs/browser-test.js",
		"/C/Users/doug/mercurial/firefox/toolkit/mozapps/update/tests/data/sharedUpdateXML.js",
		"/C/Users/doug/mercurial/firefox/browser/base/.eslintrc.js",
		"/C/Users/doug/mercurial/firefox/mozconfig",
		"/C/Users/doug/mercurial/firefox/tools/lint/eslint/eslint-plugin-mozilla/lib/configs/browser-test.js",
		"/C/Users/doug/mercurial/firefox/browser/base/content/test/appUpdate/sharedUpdateXML.js",
		"/C/Users/doug/mercurial/firefox/browser/components/customizableui/content/panelUI.inc.xul"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.h",
			"",
			"*.cpp,*.hpp,*.h,*.c,*.js,*.xul,*.xhtml",
			"*.cpp,*.hpp,*.h,*.c.*.js,*.xul,*.xhtml",
			"*.cpp,*.hpp,*.h,*.c.*.js",
			"*.cpp,*.hpp,*.h,*.c",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" + selection.offs",
			"1.0f",
			"tex.px_height",
			"tex.px_width",
			"should_select",
			"/ 2",
			" + ",
			"kszDebugFormatString",
			"stringPrintOffset",
			"resultString",
			"resultStringSize",
			"st_Offset",
			"szDebugString",
			"formatStringSize",
			"szDebugString",
			"cbFormatString",
			" =",
			"tex.attributes",
			"asset_type",
			"tex.attributes",
			"tex",
			"f32 ",
			"tex",
			"anchor",
			"i32",
			"anchor_x",
			"int",
			"anchor_x",
			"int",
			"i32",
			"x",
			"1.0f",
			"1;",
			"horizontal_line",
			"tex",
			", selection_rect",
			"selection_rect",
			"min",
			"max",
			"min",
			"clamp",
			"BrainType",
			"MeatSpaceType",
			"Brain",
			"mouse_world",
			"scale",
			"->",
			"entity->p",
			"x",
			"i32",
			"window_height",
			"view_",
			"width",
			"attrs",
			"4.0f",
			"GAME",
			"game",
			"malloc",
			"calloc",
			"g_debug_print_ring_buffer_write_head",
			"platform",
			"fall",
			"game_debug_en",
			"*",
			"IMGUI_RENDER",
			"im_arrays",
			"imguiIO",
			"imgui",
			"ImGui_ImplSdlGL3_Init",
			"SHUTDOWN",
			"imgui::",
			"imgui",
			"IMGUI",
			"Imgui",
			"GET_IO",
			"get_io",
			"update_and_re",
			"NEW_FRAME",
			"GET_IO",
			"ImGui::Shutdown",
			"imgui::",
			"ImGui::GetIO",
			"get_imgui_io",
			"imgui::",
			"game",
			"draw_data",
			"ImGui::",
			"LoadTryIndex",
			"GameCode",
			"GameCodeDLL",
			"GameCode",
			"memory",
			" g_",
			"source_dll_name",
			"debug_print_ring_buffer",
			"platform",
			"g_",
			"extern ",
			"&g_render_commands",
			"game_state",
			"g_game_state",
			"game_state",
			"g_render",
			"IsValid",
			"UpdateAndRender",
			"g_asset_manager()",
			"g_asset_manager->",
			"g_asset_manager",
			"TransientState",
			"^[0-9a-z]+ g_",
			"GameCodeDLL",
			"DLLLastWriteTime",
			"Ignored",
			"Result",
			"win32_game_code",
			"LockFileName",
			"TempDLLName",
			"SourceDLLName",
			"texture_handle",
			"Texture",
			"texture",
			"platform_register_texture",
			"register_texture",
			"free_file_memory\\(",
			"free_file_memory",
			"FileLastWriteTime",
			"register_texture",
			"\t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"size_t",
			"$1_",
			"42424242",
			"$1size_t$2",
			"$1",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 40,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "debug.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129,
						"regions":
						{
						},
						"selection":
						[
							[
								59,
								59
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "debug.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1122,
						"regions":
						{
						},
						"selection":
						[
							[
								318,
								318
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "sdl_platform.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17173,
						"regions":
						{
						},
						"selection":
						[
							[
								12198,
								12198
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7219.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libs/include/SDL2/SDL_atomic.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9458,
						"regions":
						{
						},
						"selection":
						[
							[
								7992,
								7992
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3302.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "sdl_platform_input.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6706,
						"regions":
						{
						},
						"selection":
						[
							[
								135,
								135
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "input.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 105,
						"regions":
						{
						},
						"selection":
						[
							[
								59,
								59
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "sdl_platform.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1239,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "jobthief.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7959,
						"regions":
						{
						},
						"selection":
						[
							[
								616,
								622
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 74.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "fall.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 154,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/zzz A File Icon zzz/aliases/JSON (Sublime).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": ".clang_complete",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "game.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3410,
						"regions":
						{
						},
						"selection":
						[
							[
								995,
								995
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 301.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "meat_space.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1114,
						"regions":
						{
						},
						"selection":
						[
							[
								435,
								456
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "meat_space.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7675,
						"regions":
						{
						},
						"selection":
						[
							[
								5848,
								5848
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1734.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "game_math.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 410,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "build/assets/test_images.pak",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1627840,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "asset_manager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 563,
						"regions":
						{
						},
						"selection":
						[
							[
								304,
								304
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 16,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"default_dir": "C:\\Users\\doug\\Documents\\github\\fall",
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "asset_manager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5325,
						"regions":
						{
						},
						"selection":
						[
							[
								127,
								128
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1350.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "memory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1454,
						"regions":
						{
						},
						"selection":
						[
							[
								444,
								444
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "libs/include/Judy.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28038,
						"regions":
						{
						},
						"selection":
						[
							[
								24130,
								24130
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9542.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "build_packager.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 555,
						"regions":
						{
						},
						"selection":
						[
							[
								276,
								276
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "asset_packager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7440,
						"regions":
						{
						},
						"selection":
						[
							[
								7004,
								7004
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4254.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "assets.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2125,
						"regions":
						{
						},
						"selection":
						[
							[
								1042,
								1042
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "imgui.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 140,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "imgui_memory_editor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10265,
						"regions":
						{
						},
						"selection":
						[
							[
								5881,
								5881
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1683.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "render_commands.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1290,
						"regions":
						{
						},
						"selection":
						[
							[
								349,
								349
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "renderer_opengl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 840,
						"regions":
						{
						},
						"selection":
						[
							[
								602,
								602
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "renderer_opengl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6948,
						"regions":
						{
						},
						"selection":
						[
							[
								5204,
								5204
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 744.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "shaders/common.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 235,
						"regions":
						{
						},
						"selection":
						[
							[
								235,
								235
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "shaders/textured_quads.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								167,
								167
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "render_commands.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1887,
						"regions":
						{
						},
						"selection":
						[
							[
								1520,
								1520
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 223.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "imgui_impl_sdl_gl3.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16966,
						"regions":
						{
						},
						"selection":
						[
							[
								8581,
								8581
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2982.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "geometry.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 396,
						"regions":
						{
						},
						"selection":
						[
							[
								161,
								161
							]
						],
						"settings":
						{
							"auto_name": "",
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "game.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 273,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "imgui/imgui.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 431460,
						"regions":
						{
						},
						"selection":
						[
							[
								252237,
								252237
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 99246.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "imgui/imgui_internal.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47500,
						"regions":
						{
						},
						"selection":
						[
							[
								3097,
								3097
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 966.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "imgui/imgui.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129707,
						"regions":
						{
						},
						"selection":
						[
							[
								26864,
								26864
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4152.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "imgui/imgui_draw.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 109252,
						"regions":
						{
						},
						"selection":
						[
							[
								43513,
								43513
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19344.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "fall.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 179,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "fall_game.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 382,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1211,
						"regions":
						{
						},
						"selection":
						[
							[
								628,
								628
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "imgui_extensions.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 197,
						"regions":
						{
						},
						"selection":
						[
							[
								84,
								84
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "imgui_extensions.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 327,
						"regions":
						{
						},
						"selection":
						[
							[
								181,
								181
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "platform.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8832,
						"regions":
						{
						},
						"selection":
						[
							[
								7118,
								7118
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4353.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 387.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fall.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"bui",
				"build.bat"
			],
			[
				"mea",
				"meat_space.cpp"
			],
			[
				"assema",
				"asset_manager.cpp"
			],
			[
				"ass",
				"asset_manager.cpp"
			],
			[
				"",
				"meat_space.cpp"
			],
			[
				"gam",
				"game.cpp"
			],
			[
				"me",
				"meat_space.h"
			],
			[
				"asset",
				"asset_packager.cpp"
			],
			[
				"assetm",
				"asset_manager.h"
			],
			[
				"de",
				"debug.cpp"
			],
			[
				"pla",
				"platform.h"
			],
			[
				"open",
				"renderer_opengl.cpp"
			],
			[
				"gamema",
				"game_math.h"
			],
			[
				"geom",
				"geometry.h"
			],
			[
				"sdl",
				"sdl_platform_input.h"
			],
			[
				"sdl_",
				"sdl_platform.cpp"
			],
			[
				"ren",
				"render_commands.cpp"
			],
			[
				"red",
				"render_commands.h"
			],
			[
				"game_",
				"game_math.h"
			],
			[
				"inpu",
				"sdl_platform_input.h"
			],
			[
				"render_",
				"render_commands.h"
			],
			[
				"game",
				"game.cpp"
			],
			[
				"meat",
				"meat_space.h"
			],
			[
				"m",
				"meat_space.h"
			],
			[
				"game.",
				"game.h"
			],
			[
				"fallgam",
				"fall_game.cpp"
			],
			[
				"fall",
				"fall.cpp"
			],
			[
				"re",
				"renderer_opengl.cpp"
			],
			[
				"as",
				"asset_manager.cpp"
			],
			[
				"debu",
				"debug.cpp"
			],
			[
				"sdlpl",
				"sdl_platform.cpp"
			],
			[
				"pl",
				"sdl_platform.cpp"
			],
			[
				"debug",
				"debug.h"
			],
			[
				"sd",
				"sdl_platform.h"
			],
			[
				"sdlplat",
				"sdl_platform.cpp"
			],
			[
				"imgui.h",
				"imgui\\imgui.h"
			],
			[
				"imgui_im",
				"imgui_impl_sdl_gl3.cpp"
			],
			[
				"deb",
				"debug.h"
			],
			[
				"imguiim",
				"imgui_impl_sdl_gl3.cpp"
			],
			[
				"imgu",
				"imgui_impl_sdl_gl3.cpp"
			],
			[
				"imgui",
				"imgui\\imgui_impl_sdl_gl3.cpp"
			],
			[
				"ga",
				"game.cpp"
			],
			[
				"render",
				"render_commands.cpp"
			],
			[
				"rendercom",
				"render_commands.cpp"
			],
			[
				"fa",
				"fall.cpp"
			],
			[
				"g",
				"game.h"
			],
			[
				"renderer",
				"renderer_opengl.cpp"
			],
			[
				"assetna",
				"asset_manager.cpp"
			],
			[
				"bu",
				"build_packager.bat"
			],
			[
				"assetma",
				"asset_manager.h"
			],
			[
				"build_",
				"build_packager.bat"
			],
			[
				"assetpa",
				"asset_packager.cpp"
			],
			[
				"asseta",
				"asset_manager.cpp"
			],
			[
				"pacak",
				"asset_packager.cpp"
			],
			[
				"jo",
				"jobthief.h"
			],
			[
				"platf",
				"platform.h"
			],
			[
				"platform",
				"sdl_platform.cpp"
			],
			[
				"sub",
				"fall.sublime-project"
			],
			[
				"plat",
				"sdl_platform.cpp"
			],
			[
				"assena",
				"asset_manager.cpp"
			],
			[
				"asse",
				"asset_manager.cpp"
			],
			[
				"asset_pa",
				"asset_packager.cpp"
			],
			[
				"assetpac",
				"packager\\asset_packager.h"
			],
			[
				"stb_re",
				"packager\\stb_rect_pack.h"
			],
			[
				"te",
				"shaders\\textured_quads.glsl"
			],
			[
				"comm",
				"shaders\\common.glsl"
			],
			[
				"rende",
				"renderer_opengl.cpp"
			],
			[
				"opengl",
				"renderer_opengl.cpp"
			],
			[
				"sdl_pl",
				"sdl_platform.cpp"
			],
			[
				"rend",
				"render_commands.h"
			],
			[
				"fal",
				"fall.cpp"
			],
			[
				"fall.su",
				"fall.sublime-project"
			],
			[
				"sdl_p",
				"sdl_platform.cpp"
			],
			[
				"imguiex",
				"imgui_extensions.h"
			],
			[
				"plato",
				"sdl_platform.cpp"
			],
			[
				"game.h",
				"game.h"
			],
			[
				"option",
				"options.js"
			],
			[
				"opti",
				"options.html"
			],
			[
				"ma",
				"manifest.json"
			],
			[
				"browser_panelui",
				"browser\\components\\customizableui\\test\\browser_panelUINotifications.js"
			],
			[
				"testconsta",
				"browser\\components\\appUpdate\\test\\testConstants.js"
			],
			[
				"downloadscom",
				"browser\\components\\downloads\\DownloadsCommon.jsm"
			],
			[
				"indicato",
				"browser\\components\\downloads\\content\\indicator.js"
			],
			[
				"test_ui",
				"services\\sync\\tests\\unit\\test_uistate.js"
			],
			[
				"uistate",
				"services\\sync\\modules\\UIState.jsm"
			],
			[
				"browser_syn",
				"browser\\base\\content\\test\\sync\\browser_sync.js"
			],
			[
				"uistat",
				"services\\sync\\modules\\UIState.jsm"
			],
			[
				"appmenu",
				"toolkit\\modules\\AppMenuNotifications.jsm"
			],
			[
				"browser-s",
				"browser\\base\\content\\browser-sync.js"
			],
			[
				"appuphead.js",
				"browser\\components\\appUpdate\\test\\head.js"
			],
			[
				"panelui",
				"browser\\components\\customizableui\\content\\panelUI.js"
			],
			[
				"panelui.j",
				"browser\\components\\customizableui\\content\\panelUI.js"
			],
			[
				"browser-sy",
				"browser\\base\\content\\browser-sync.js"
			],
			[
				"browser-add",
				"browser\\base\\content\\browser-addons.js"
			],
			[
				"test_sideload",
				"browser\\base\\content\\test\\webextensions\\browser_extension_sideloading.js"
			],
			[
				"browser-addon",
				"browser\\base\\content\\browser-addons.js"
			],
			[
				"extensionsui",
				"browser\\modules\\ExtensionsUI.jsm"
			],
			[
				"head",
				"addon-sdk\\test\\head.js"
			],
			[
				"updatesback",
				"browser\\base\\content\\test\\appUpdate\\browser_updatesBackgroundWindowFailures.js"
			],
			[
				"appmenun",
				"browser\\components\\customizableui\\AppMenuNotifications.jsm"
			],
			[
				"updateli",
				"browser\\components\\appUpdate\\UpdateListener.jsm"
			],
			[
				"updatelis",
				"browser\\components\\appUpdate\\UpdateListener.jsm"
			],
			[
				"loginmanagerparent",
				"toolkit\\components\\passwordmgr\\LoginManagerParent.jsm"
			],
			[
				"browser.js",
				"browser\\base\\content\\browser.js"
			],
			[
				"loginmanapar",
				"toolkit\\components\\passwordmgr\\LoginManagerParent.jsm"
			],
			[
				"browser",
				"browser\\base\\content\\browser.js"
			],
			[
				"test_01",
				"toolkit\\mozapps\\update\\tests\\chrome\\test_0161_check_unsupported.xul"
			],
			[
				"appupdahea",
				"browser\\base\\content\\test\\appUpdate\\head.js"
			],
			[
				"updatesba",
				"browser\\base\\content\\test\\appUpdate\\browser_updatesBasicPromptNoStaging.js"
			],
			[
				"nsbrowse",
				"browser\\components\\nsBrowserGlue.js"
			],
			[
				"nsbrows",
				"browser\\components\\nsBrowserGlue.js"
			],
			[
				"appup",
				"browser\\base\\content\\test\\appUpdate\\head.js"
			],
			[
				"paneluinoti",
				"browser\\components\\customizableui\\test\\browser_panelUINotifications.js"
			],
			[
				"panelui.",
				"browser\\components\\customizableui\\content\\panelUI.js"
			],
			[
				"nsbrowserg",
				"browser\\components\\nsBrowserGlue.js"
			],
			[
				"appmenuno",
				"browser\\components\\customizableui\\AppMenuNotifications.jsm"
			],
			[
				"browser_pa",
				"browser\\components\\customizableui\\test\\browser_panelUINotifications.js"
			],
			[
				"panelu",
				"browser\\components\\customizableui\\content\\panelUI.js"
			],
			[
				"browser-",
				"browser\\base\\content\\browser-addons.js"
			],
			[
				"browser-syn",
				"browser\\base\\content\\browser-sync.js"
			],
			[
				"browser-addo",
				"browser\\base\\content\\browser-addons.js"
			],
			[
				"paneluino",
				"browser\\components\\customizableui\\test\\browser_panelUINotifications.js"
			],
			[
				"appupdate/hea",
				"browser\\base\\content\\test\\appUpdate\\head.js"
			],
			[
				"appupdate/",
				"browser\\components\\appUpdate\\moz.build"
			],
			[
				"selfsuppo",
				"browser\\modules\\SelfSupportBackend.jsm"
			],
			[
				"browser.",
				"browser\\base\\content\\browser.js"
			],
			[
				"testupdatewi",
				"testing\\firefox-ui\\tests\\puppeteer\\test_update_wizard.py"
			],
			[
				"nsupdates",
				"toolkit\\mozapps\\update\\nsUpdateService.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\doug\\Documents\\github\\fall\\fall.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 354.0,
		"last_filter": "button",
		"selected_items":
		[
			[
				"button",
				"ButtonInput"
			],
			[
				"platformin",
				"PlatformInput"
			],
			[
				"assetat",
				"AssetAttributes"
			],
			[
				"GameMe",
				"GameMemory"
			],
			[
				"gameco",
				"GameCode"
			],
			[
				"gettexdata",
				"GetTexDataAsRGBA32"
			],
			[
				"imtextstr",
				"ImTextStrFromUtf8"
			],
			[
				"assetma",
				"AssetManager"
			],
			[
				"jt_run",
				"jt_run_job"
			],
			[
				"beginre",
				"PLATFORM_BEGIN_READ_ENTIRE_FILE"
			],
			[
				"platformas",
				"PlatformAsyncFileHandle"
			],
			[
				"pushtoar",
				"push_to_archive_mem"
			],
			[
				"archie",
				"ArchiveEntryHeader_texture_atlas"
			],
			[
				"debugrea",
				"DEBUG_PLATFORM_READ_ENTIRE_FILE"
			],
			[
				"opengl",
				"OpenGLState"
			],
			[
				"texture",
				"TexturedQuadVertex"
			],
			[
				"textured",
				"TexturedQuadVertex"
			],
			[
				"initre",
				"init_render_commands"
			],
			[
				"rendergrou",
				"RENDER_GROUP_H__"
			],
			[
				"Image",
				"Image"
			],
			[
				"text",
				"Text"
			],
			[
				"makeprofi",
				"makeProfileAvailableToTab"
			],
			[
				"scrollToSelectionGeneration",
				"scrollToSelectionGeneration"
			],
			[
				"openUiL",
				"openUILinkIn"
			],
			[
				"up_che",
				"UP_checkForUpdates"
			],
			[
				"waitforwindowfo",
				"waitForWindowFocus"
			],
			[
				"ensurewindowis",
				"ensureWindowIsFocused"
			],
			[
				"ensurewindowisfo",
				"ensureWindowIsFocused"
			],
			[
				"dumpsymb",
				"DumpSymbols"
			],
			[
				"platformrea",
				"platform_read_entire_file"
			],
			[
				"getroa",
				"get_rotation_matrix"
			],
			[
				"getContentTypeForMIMEType",
				"GetContentTypeForMIMEType"
			],
			[
				"getcontenttypeformim",
				"GetContentTypeForMIMEType"
			],
			[
				"getContentTypeFor",
				"getContentTypeForMIMEType"
			],
			[
				"getContentTypeForM",
				"getContentTypeForMIMEType"
			],
			[
				"forcecc",
				"ForceCC"
			],
			[
				"getWeakRefe",
				"GetWeakReference"
			],
			[
				"plugins",
				"Plugins"
			],
			[
				"nsIDocum",
				"nsIDocument"
			],
			[
				"translationnodeli",
				"nsTranslationNodeList"
			],
			[
				"neuteredwindowre",
				"NeuteredWindowRegion"
			],
			[
				"CallWindowP",
				"CallWindowProcedureHook"
			]
		],
		"width": 478.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 472.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
