#pragma once

#include "platform.h"
// PlatformTexture
// PlatformFileLastWriteTime
#include "editor.h"
// Editor
#include "meat_space.h"
// MeatSpaceCommand_move_to
// MeatSpaceWeapon_gun
// MeatSpaceWeapon_grenade_launcher
// MeatSpaceWeapon_healing_ray
// MeatSpaceEntity
// MeatSpaceBrain_player
// MeatSpaceProjectile_common
// MeatSpaceProjectile_entity_targeted
// MeatSpaceProjectile_position_targeted
// MeatSpaceCamera
// PositionGridBucketNode
// CollisionVolume_common
// CollisionVolume_box
// CollisionVolume_circle
// CollisionVolume_elipse
// MeatSpaceEntityTemplate
// MeatSpaceEntityTemplateCollection
// MeatSpace
#include "assets.h"
// AssetAttributes
// TextureAsset
// PackedTexture
// ArchiveEntryHeader_texture_atlas
// GameArchiveHeader
#include "geometry.h"
// vec2
// ivec2
// vec3
// ivec3
// rect2
#include "game.h"
// GameState
// TransientState
#include "grid.h"
// GridCell
// Grid
#include "asset_manager.h"
// AssetManager
enum TypeInfo_ID {
  TypeInfo_ID_none,

  TypeInfo_ID_void,

  TypeInfo_ID_u64,
  TypeInfo_ID_u32,
  TypeInfo_ID_u16,
  TypeInfo_ID_u8,
  TypeInfo_ID_i64,
  TypeInfo_ID_i32,
  TypeInfo_ID_i16,
  TypeInfo_ID_i8,
  TypeInfo_ID_b32,
  TypeInfo_ID_f32,
  TypeInfo_ID_f64,

  TypeInfo_ID_char,
  TypeInfo_ID_int,

  TypeInfo_ID_end_primitives,
  TypeInfo_ID_PlatformTexture,
  TypeInfo_ID_PlatformFileLastWriteTime,
  TypeInfo_ID_Editor,
  TypeInfo_ID_MeatSpaceCommand_Type,
  TypeInfo_ID_MeatSpaceCommand_move_to,
  TypeInfo_ID_MeatSpaceCommand,
  TypeInfo_ID_MeatSpaceWeapon_Type,
  TypeInfo_ID_MeatSpaceWeapon_gun,
  TypeInfo_ID_MeatSpaceWeapon_grenade_launcher,
  TypeInfo_ID_MeatSpaceWeapon_healing_ray,
  TypeInfo_ID_MeatSpaceWeapon,
  TypeInfo_ID_SelectionGroup,
  TypeInfo_ID_MeatSpaceEntity,
  TypeInfo_ID_MeatSpaceBrain_Type,
  TypeInfo_ID_MeatSpaceBrain_player,
  TypeInfo_ID_MeatSpaceBrain,
  TypeInfo_ID_MeatSpaceProjectile_Type,
  TypeInfo_ID_MeatSpaceProjectile_common,
  TypeInfo_ID_MeatSpaceProjectile_entity_targeted,
  TypeInfo_ID_MeatSpaceProjectile_position_targeted,
  TypeInfo_ID_MeatSpaceProjectile,
  TypeInfo_ID_MeatSpaceCamera,
  TypeInfo_ID_PositionGridBucketNode,
  TypeInfo_ID_CollisionVolume_Type,
  TypeInfo_ID_CollisionVolume_common,
  TypeInfo_ID_CollisionVolume_box,
  TypeInfo_ID_CollisionVolume_circle,
  TypeInfo_ID_CollisionVolume_elipse,
  TypeInfo_ID_CollisionVolume,
  TypeInfo_ID_MeatSpaceEntityTemplateId,
  TypeInfo_ID_MeatSpaceEntityTemplate,
  TypeInfo_ID_MeatSpaceEntityTemplateCollection,
  TypeInfo_ID_MeatSpace,
  TypeInfo_ID_AssetType,
  TypeInfo_ID_AssetDirection,
  TypeInfo_ID_AssetMoveState,
  TypeInfo_ID_AssetLivingState,
  TypeInfo_ID_AssetClass,
  TypeInfo_ID_AssetColor,
  TypeInfo_ID_AssetAttributes,
  TypeInfo_ID_TextureAsset,
  TypeInfo_ID_ArchiveEntryType,
  TypeInfo_ID_PackedTexture,
  TypeInfo_ID_ArchiveEntryHeader_texture_atlas,
  TypeInfo_ID_GameArchiveHeader,
  TypeInfo_ID_vec2,
  TypeInfo_ID_ivec2,
  TypeInfo_ID_vec3,
  TypeInfo_ID_ivec3,
  TypeInfo_ID_rect2,
  TypeInfo_ID_GameState,
  TypeInfo_ID_TransientState,
  TypeInfo_ID_GridCell,
  TypeInfo_ID_Grid,
  TypeInfo_ID_AssetManager,

  TypeInfo_ID_count
};

enum TypeKind {
  TypeKind_struct,
  TypeKind_enum,
  TypeKind_union,
  TypeKind_primitive,
};

enum MemberKind {
  MemberKind_enum,
  MemberKind_array,
  MemberKind_pointer,
  MemberKind_array_of_pointers,
  MemberKind_value,
};

struct MemberInfo {
  char* member_name;
  TypeInfo_ID parent_type;
  TypeInfo_ID member_type;
  MemberKind member_kind;
  int enum_value;
  size_t offset;
  size_t array_size;
  int table_index;
};

MemberInfo TypeInfo_member_table[] = {
  {"width", TypeInfo_ID_PlatformTexture, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((PlatformTexture*)0)->width, 0, 0},
  {"handle", TypeInfo_ID_PlatformTexture, TypeInfo_ID_void, MemberKind_pointer, 0, (size_t)&((PlatformTexture*)0)->handle, 0, 1},
  {"platform_data", TypeInfo_ID_PlatformFileLastWriteTime, TypeInfo_ID_char, MemberKind_array, 0, (size_t)&((PlatformFileLastWriteTime*)0)->platform_data, ARRAY_LENGTH(((PlatformFileLastWriteTime*)0)->platform_data),2},
  {"MeatSpaceCommand_Type_none", TypeInfo_ID_MeatSpaceCommand_Type, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 3},
  {"MeatSpaceCommand_Type_move_to", TypeInfo_ID_MeatSpaceCommand_Type, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 4},
  {"MeatSpaceCommand_Type_count", TypeInfo_ID_MeatSpaceCommand_Type, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 5},
  {"type", TypeInfo_ID_MeatSpaceCommand_move_to, TypeInfo_ID_MeatSpaceCommand_Type, MemberKind_value, 0, (size_t)&((MeatSpaceCommand_move_to*)0)->type, 0, 6},
  {"target", TypeInfo_ID_MeatSpaceCommand_move_to, TypeInfo_ID_GridCell, MemberKind_value, 0, (size_t)&((MeatSpaceCommand_move_to*)0)->target, 0, 7},
  {"type", TypeInfo_ID_MeatSpaceCommand, TypeInfo_ID_MeatSpaceCommand_Type, MemberKind_value, 0, (size_t)&((MeatSpaceCommand*)0)->type, 0, 8},
  {"move_to", TypeInfo_ID_MeatSpaceCommand, TypeInfo_ID_MeatSpaceCommand_move_to, MemberKind_value, 0, (size_t)&((MeatSpaceCommand*)0)->move_to, 0, 9},
  {"MeatSpaceWeapon_Type_none", TypeInfo_ID_MeatSpaceWeapon_Type, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 10},
  {"MeatSpaceWeapon_Type_gun", TypeInfo_ID_MeatSpaceWeapon_Type, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 11},
  {"MeatSpaceWeapon_Type_grenade_launcher", TypeInfo_ID_MeatSpaceWeapon_Type, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 12},
  {"MeatSpaceWeapon_Type_healing_ray", TypeInfo_ID_MeatSpaceWeapon_Type, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 13},
  {"type", TypeInfo_ID_MeatSpaceWeapon_gun, TypeInfo_ID_MeatSpaceWeapon_Type, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_gun*)0)->type, 0, 14},
  {"damage", TypeInfo_ID_MeatSpaceWeapon_gun, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_gun*)0)->damage, 0, 15},
  {"range", TypeInfo_ID_MeatSpaceWeapon_gun, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_gun*)0)->range, 0, 16},
  {"cooldown", TypeInfo_ID_MeatSpaceWeapon_gun, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_gun*)0)->cooldown, 0, 17},
  {"time_since_last_fired", TypeInfo_ID_MeatSpaceWeapon_gun, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_gun*)0)->time_since_last_fired, 0, 18},
  {"type", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_MeatSpaceWeapon_Type, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->type, 0, 19},
  {"damage", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->damage, 0, 20},
  {"range", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->range, 0, 21},
  {"cooldown", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->cooldown, 0, 22},
  {"time_since_last_fired", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->time_since_last_fired, 0, 23},
  {"radius", TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_grenade_launcher*)0)->radius, 0, 24},
  {"type", TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeInfo_ID_MeatSpaceWeapon_Type, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_healing_ray*)0)->type, 0, 25},
  {"damage", TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_healing_ray*)0)->damage, 0, 26},
  {"range", TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_healing_ray*)0)->range, 0, 27},
  {"cooldown", TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_healing_ray*)0)->cooldown, 0, 28},
  {"time_since_last_fired", TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon_healing_ray*)0)->time_since_last_fired, 0, 29},
  {"type", TypeInfo_ID_MeatSpaceWeapon, TypeInfo_ID_MeatSpaceWeapon_Type, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon*)0)->type, 0, 30},
  {"gun", TypeInfo_ID_MeatSpaceWeapon, TypeInfo_ID_MeatSpaceWeapon_gun, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon*)0)->gun, 0, 31},
  {"grenade_launcher", TypeInfo_ID_MeatSpaceWeapon, TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon*)0)->grenade_launcher, 0, 32},
  {"healing_ray", TypeInfo_ID_MeatSpaceWeapon, TypeInfo_ID_MeatSpaceWeapon_healing_ray, MemberKind_value, 0, (size_t)&((MeatSpaceWeapon*)0)->healing_ray, 0, 33},
  {"SelectionGroup_none", TypeInfo_ID_SelectionGroup, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 34},
  {"SelectionGroup_player", TypeInfo_ID_SelectionGroup, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 35},
  {"SelectionGroup_nonplayer", TypeInfo_ID_SelectionGroup, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 36},
  {"SelectionGroup_enemy", TypeInfo_ID_SelectionGroup, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 37},
  {"id", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->id, 0, 38},
  {"p", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->p, 0, 39},
  {"flags", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_u32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->flags, 0, 40},
  {"asset_type", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_AssetType, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->asset_type, 0, 41},
  {"asset_attributes", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_AssetAttributes, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->asset_attributes, 0, 42},
  {"z_bias", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->z_bias, 0, 43},
  {"selection_group", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_SelectionGroup, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->selection_group, 0, 44},
  {"selected", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->selected, 0, 45},
  {"selection_bounds", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_rect2, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->selection_bounds, 0, 46},
  {"collision_volumes", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->collision_volumes, 0, 47},
  {"target_center", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->target_center, 0, 48},
  {"firing_center", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->firing_center, 0, 49},
  {"max_health", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->max_health, 0, 50},
  {"health", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->health, 0, 51},
  {"weapon", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_MeatSpaceWeapon, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->weapon, 0, 52},
  {"unfinished_move", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->unfinished_move, 0, 53},
  {"unfinished_move_target", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_GridCell, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->unfinished_move_target, 0, 54},
  {"command", TypeInfo_ID_MeatSpaceEntity, TypeInfo_ID_MeatSpaceCommand, MemberKind_value, 0, (size_t)&((MeatSpaceEntity*)0)->command, 0, 55},
  {"MeatSpaceBrain_Type_none", TypeInfo_ID_MeatSpaceBrain_Type, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 56},
  {"MeatSpaceBrain_Type_player", TypeInfo_ID_MeatSpaceBrain_Type, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 57},
  {"MeatSpaceBrain_Type_count", TypeInfo_ID_MeatSpaceBrain_Type, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 58},
  {"type", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_MeatSpaceBrain_Type, MemberKind_value, 0, (size_t)&((MeatSpaceBrain_player*)0)->type, 0, 59},
  {"selected_entities_count", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceBrain_player*)0)->selected_entities_count, 0, 60},
  {"selected_entities", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_i64, MemberKind_pointer, 0, (size_t)&((MeatSpaceBrain_player*)0)->selected_entities, 0, 61},
  {"mouse_down_entity", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_MeatSpaceEntity, MemberKind_pointer, 0, (size_t)&((MeatSpaceBrain_player*)0)->mouse_down_entity, 0, 62},
  {"selecting", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((MeatSpaceBrain_player*)0)->selecting, 0, 63},
  {"selection_start", TypeInfo_ID_MeatSpaceBrain_player, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceBrain_player*)0)->selection_start, 0, 64},
  {"type", TypeInfo_ID_MeatSpaceBrain, TypeInfo_ID_MeatSpaceBrain_Type, MemberKind_value, 0, (size_t)&((MeatSpaceBrain*)0)->type, 0, 65},
  {"player", TypeInfo_ID_MeatSpaceBrain, TypeInfo_ID_MeatSpaceBrain_player, MemberKind_value, 0, (size_t)&((MeatSpaceBrain*)0)->player, 0, 66},
  {"MeatSpaceProjectile_Type_none", TypeInfo_ID_MeatSpaceProjectile_Type, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 67},
  {"MeatSpaceProjectile_Type_common", TypeInfo_ID_MeatSpaceProjectile_Type, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 68},
  {"MeatSpaceProjectile_Type_entity_targeted", TypeInfo_ID_MeatSpaceProjectile_Type, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 69},
  {"MeatSpaceProjectile_Type_position_targeted", TypeInfo_ID_MeatSpaceProjectile_Type, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 70},
  {"type", TypeInfo_ID_MeatSpaceProjectile_common, TypeInfo_ID_MeatSpaceProjectile_Type, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_common*)0)->type, 0, 71},
  {"p", TypeInfo_ID_MeatSpaceProjectile_common, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_common*)0)->p, 0, 72},
  {"type", TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeInfo_ID_MeatSpaceProjectile_Type, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_entity_targeted*)0)->type, 0, 73},
  {"p", TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_entity_targeted*)0)->p, 0, 74},
  {"target_entity", TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_entity_targeted*)0)->target_entity, 0, 75},
  {"speed", TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_entity_targeted*)0)->speed, 0, 76},
  {"damage", TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_entity_targeted*)0)->damage, 0, 77},
  {"type", TypeInfo_ID_MeatSpaceProjectile_position_targeted, TypeInfo_ID_MeatSpaceProjectile_Type, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_position_targeted*)0)->type, 0, 78},
  {"p", TypeInfo_ID_MeatSpaceProjectile_position_targeted, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_position_targeted*)0)->p, 0, 79},
  {"target_p", TypeInfo_ID_MeatSpaceProjectile_position_targeted, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_position_targeted*)0)->target_p, 0, 80},
  {"speed", TypeInfo_ID_MeatSpaceProjectile_position_targeted, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile_position_targeted*)0)->speed, 0, 81},
  {"type", TypeInfo_ID_MeatSpaceProjectile, TypeInfo_ID_MeatSpaceProjectile_Type, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile*)0)->type, 0, 82},
  {"common", TypeInfo_ID_MeatSpaceProjectile, TypeInfo_ID_MeatSpaceProjectile_common, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile*)0)->common, 0, 83},
  {"entity_targeted", TypeInfo_ID_MeatSpaceProjectile, TypeInfo_ID_MeatSpaceProjectile_entity_targeted, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile*)0)->entity_targeted, 0, 84},
  {"position_targeted", TypeInfo_ID_MeatSpaceProjectile, TypeInfo_ID_MeatSpaceProjectile_position_targeted, MemberKind_value, 0, (size_t)&((MeatSpaceProjectile*)0)->position_targeted, 0, 85},
  {"position", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->position, 0, 86},
  {"scale", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->scale, 0, 87},
  {"viewport_top", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->viewport_top, 0, 88},
  {"viewport_bottom", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->viewport_bottom, 0, 89},
  {"viewport_left", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->viewport_left, 0, 90},
  {"viewport_right", TypeInfo_ID_MeatSpaceCamera, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceCamera*)0)->viewport_right, 0, 91},
  {"entity_index_plus_one", TypeInfo_ID_PositionGridBucketNode, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((PositionGridBucketNode*)0)->entity_index_plus_one, 0, 92},
  {"next_bucket_plus_one", TypeInfo_ID_PositionGridBucketNode, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((PositionGridBucketNode*)0)->next_bucket_plus_one, 0, 93},
  {"CollisionVolume_Type_none", TypeInfo_ID_CollisionVolume_Type, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 94},
  {"CollisionVolume_Type_box", TypeInfo_ID_CollisionVolume_Type, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 95},
  {"CollisionVolume_Type_common", TypeInfo_ID_CollisionVolume_Type, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 96},
  {"CollisionVolume_Type_circle", TypeInfo_ID_CollisionVolume_Type, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 97},
  {"CollisionVolume_Type_elipse", TypeInfo_ID_CollisionVolume_Type, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 98},
  {"type", TypeInfo_ID_CollisionVolume_common, TypeInfo_ID_CollisionVolume_Type, MemberKind_value, 0, (size_t)&((CollisionVolume_common*)0)->type, 0, 99},
  {"entity_id", TypeInfo_ID_CollisionVolume_common, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((CollisionVolume_common*)0)->entity_id, 0, 100},
  {"offset", TypeInfo_ID_CollisionVolume_common, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((CollisionVolume_common*)0)->offset, 0, 101},
  {"type", TypeInfo_ID_CollisionVolume_box, TypeInfo_ID_CollisionVolume_Type, MemberKind_value, 0, (size_t)&((CollisionVolume_box*)0)->type, 0, 102},
  {"entity_id", TypeInfo_ID_CollisionVolume_box, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((CollisionVolume_box*)0)->entity_id, 0, 103},
  {"offset", TypeInfo_ID_CollisionVolume_box, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((CollisionVolume_box*)0)->offset, 0, 104},
  {"dimensions", TypeInfo_ID_CollisionVolume_box, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((CollisionVolume_box*)0)->dimensions, 0, 105},
  {"type", TypeInfo_ID_CollisionVolume_circle, TypeInfo_ID_CollisionVolume_Type, MemberKind_value, 0, (size_t)&((CollisionVolume_circle*)0)->type, 0, 106},
  {"entity_id", TypeInfo_ID_CollisionVolume_circle, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((CollisionVolume_circle*)0)->entity_id, 0, 107},
  {"offset", TypeInfo_ID_CollisionVolume_circle, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((CollisionVolume_circle*)0)->offset, 0, 108},
  {"radius", TypeInfo_ID_CollisionVolume_circle, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((CollisionVolume_circle*)0)->radius, 0, 109},
  {"type", TypeInfo_ID_CollisionVolume_elipse, TypeInfo_ID_CollisionVolume_Type, MemberKind_value, 0, (size_t)&((CollisionVolume_elipse*)0)->type, 0, 110},
  {"entity_id", TypeInfo_ID_CollisionVolume_elipse, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((CollisionVolume_elipse*)0)->entity_id, 0, 111},
  {"offset", TypeInfo_ID_CollisionVolume_elipse, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((CollisionVolume_elipse*)0)->offset, 0, 112},
  {"type", TypeInfo_ID_CollisionVolume, TypeInfo_ID_CollisionVolume_Type, MemberKind_value, 0, (size_t)&((CollisionVolume*)0)->type, 0, 113},
  {"common", TypeInfo_ID_CollisionVolume, TypeInfo_ID_CollisionVolume_common, MemberKind_value, 0, (size_t)&((CollisionVolume*)0)->common, 0, 114},
  {"box", TypeInfo_ID_CollisionVolume, TypeInfo_ID_CollisionVolume_box, MemberKind_value, 0, (size_t)&((CollisionVolume*)0)->box, 0, 115},
  {"circle", TypeInfo_ID_CollisionVolume, TypeInfo_ID_CollisionVolume_circle, MemberKind_value, 0, (size_t)&((CollisionVolume*)0)->circle, 0, 116},
  {"elipse", TypeInfo_ID_CollisionVolume, TypeInfo_ID_CollisionVolume_elipse, MemberKind_value, 0, (size_t)&((CollisionVolume*)0)->elipse, 0, 117},
  {"MeatSpaceEntityTemplateId_none", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 118},
  {"MeatSpaceEntityTemplateId_tile", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 119},
  {"MeatSpaceEntityTemplateId_crew_gun", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 120},
  {"MeatSpaceEntityTemplateId_crew_healing_ray", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 121},
  {"MeatSpaceEntityTemplateId_crew_grenade_launcher", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 122},
  {"MeatSpaceEntityTemplateId_boulder_large", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 5, 0, 0, 123},
  {"MeatSpaceEntityTemplateId_tree_medium", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 6, 0, 0, 124},
  {"MeatSpaceEntityTemplateId_tree_large", TypeInfo_ID_MeatSpaceEntityTemplateId, TypeInfo_ID_i32, MemberKind_enum, 7, 0, 0, 125},
  {"id", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_MeatSpaceEntityTemplateId, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->id, 0, 126},
  {"flags", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_u32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->flags, 0, 127},
  {"asset_type", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_AssetType, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->asset_type, 0, 128},
  {"z_bias", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->z_bias, 0, 129},
  {"selection_bounds", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_rect2, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->selection_bounds, 0, 130},
  {"collision_boxes", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->collision_boxes, 0, 131},
  {"target_center", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->target_center, 0, 132},
  {"firing_center", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->firing_center, 0, 133},
  {"weapon", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_MeatSpaceWeapon, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->weapon, 0, 134},
  {"max_health", TypeInfo_ID_MeatSpaceEntityTemplate, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplate*)0)->max_health, 0, 135},
  {"templates", TypeInfo_ID_MeatSpaceEntityTemplateCollection, TypeInfo_ID_MeatSpaceEntityTemplate, MemberKind_pointer, 0, (size_t)&((MeatSpaceEntityTemplateCollection*)0)->templates, 0, 136},
  {"templates_count", TypeInfo_ID_MeatSpaceEntityTemplateCollection, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplateCollection*)0)->templates_count, 0, 137},
  {"collision_volumes", TypeInfo_ID_MeatSpaceEntityTemplateCollection, TypeInfo_ID_CollisionVolume, MemberKind_pointer, 0, (size_t)&((MeatSpaceEntityTemplateCollection*)0)->collision_volumes, 0, 138},
  {"collision_volumes_count", TypeInfo_ID_MeatSpaceEntityTemplateCollection, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpaceEntityTemplateCollection*)0)->collision_volumes_count, 0, 139},
  {"entities", TypeInfo_ID_MeatSpace, TypeInfo_ID_MeatSpaceEntity, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->entities, ARRAY_LENGTH(((MeatSpace*)0)->entities),140},
  {"entities_count", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->entities_count, 0, 141},
  {"brains", TypeInfo_ID_MeatSpace, TypeInfo_ID_MeatSpaceBrain, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->brains, ARRAY_LENGTH(((MeatSpace*)0)->brains),142},
  {"brains_count", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->brains_count, 0, 143},
  {"projectiles", TypeInfo_ID_MeatSpace, TypeInfo_ID_MeatSpaceProjectile, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->projectiles, ARRAY_LENGTH(((MeatSpace*)0)->projectiles),144},
  {"projectiles_count", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->projectiles_count, 0, 145},
  {"projectiles_free_stack", TypeInfo_ID_MeatSpace, TypeInfo_ID_u32, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->projectiles_free_stack, ARRAY_LENGTH(((MeatSpace*)0)->projectiles_free_stack),146},
  {"projectiles_free_stack_count", TypeInfo_ID_MeatSpace, TypeInfo_ID_u32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->projectiles_free_stack_count, 0, 147},
  {"collision_volumes", TypeInfo_ID_MeatSpace, TypeInfo_ID_CollisionVolume, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->collision_volumes, ARRAY_LENGTH(((MeatSpace*)0)->collision_volumes),148},
  {"collision_volumes_count", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->collision_volumes_count, 0, 149},
  {"grid", TypeInfo_ID_MeatSpace, TypeInfo_ID_Grid, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->grid, 0, 150},
  {"position_grid", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->position_grid, ARRAY_LENGTH(((MeatSpace*)0)->position_grid),151},
  {"position_grid_buckets", TypeInfo_ID_MeatSpace, TypeInfo_ID_PositionGridBucketNode, MemberKind_array, 0, (size_t)&((MeatSpace*)0)->position_grid_buckets, ARRAY_LENGTH(((MeatSpace*)0)->position_grid_buckets),152},
  {"position_grid_bucket_index", TypeInfo_ID_MeatSpace, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->position_grid_bucket_index, 0, 153},
  {"template_collection", TypeInfo_ID_MeatSpace, TypeInfo_ID_MeatSpaceEntityTemplateCollection, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->template_collection, 0, 154},
  {"camera", TypeInfo_ID_MeatSpace, TypeInfo_ID_MeatSpaceCamera, MemberKind_value, 0, (size_t)&((MeatSpace*)0)->camera, 0, 155},
  {"AssetType_unspecified", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 156},
  {"AssetType_square", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 157},
  {"AssetType_crew", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 158},
  {"AssetType_selection_line", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 159},
  {"AssetType_selection_circle", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 160},
  {"AssetType_tile", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 5, 0, 0, 161},
  {"AssetType_boulder_large", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 6, 0, 0, 162},
  {"AssetType_tree_medium", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 7, 0, 0, 163},
  {"AssetType_tree_large", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 8, 0, 0, 164},
  {"AssetType_count", TypeInfo_ID_AssetType, TypeInfo_ID_i32, MemberKind_enum, 9, 0, 0, 165},
  {"AssetDirection_unspecified", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 166},
  {"AssetDirection_left", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 167},
  {"AssetDirection_right", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 168},
  {"AssetDirection_forward", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 169},
  {"AssetDirection_backward", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 170},
  {"AssetDirection_horizontal", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 5, 0, 0, 171},
  {"AssetDirection_vertical", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 6, 0, 0, 172},
  {"AssetDirection_count", TypeInfo_ID_AssetDirection, TypeInfo_ID_i32, MemberKind_enum, 7, 0, 0, 173},
  {"AssetMoveState_unspecified", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 174},
  {"AssetMoveState_standing", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 175},
  {"AssetMoveState_running", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 176},
  {"AssetMoveState_walking", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 177},
  {"AssetMoveState_jumping", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 178},
  {"AssetMoveState_falling", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 5, 0, 0, 179},
  {"AssetMoveState_count", TypeInfo_ID_AssetMoveState, TypeInfo_ID_i32, MemberKind_enum, 6, 0, 0, 180},
  {"AssetLivingState_unspecified", TypeInfo_ID_AssetLivingState, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 181},
  {"AssetLivingState_dead", TypeInfo_ID_AssetLivingState, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 182},
  {"AssetLivingState_destroyed", TypeInfo_ID_AssetLivingState, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 183},
  {"AssetLivingState_count", TypeInfo_ID_AssetLivingState, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 184},
  {"AssetClass_unspecified", TypeInfo_ID_AssetClass, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 185},
  {"AssetClass_science", TypeInfo_ID_AssetClass, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 186},
  {"AssetClass_count", TypeInfo_ID_AssetClass, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 187},
  {"AssetColor_unspecified", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 188},
  {"AssetColor_dark", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 189},
  {"AssetColor_light", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 2, 0, 0, 190},
  {"AssetColor_caramel", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 3, 0, 0, 191},
  {"AssetColor_blue", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 4, 0, 0, 192},
  {"AssetColor_green", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 5, 0, 0, 193},
  {"AssetColor_red", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 6, 0, 0, 194},
  {"AssetColor_count", TypeInfo_ID_AssetColor, TypeInfo_ID_i32, MemberKind_enum, 7, 0, 0, 195},
  {"tracking_id", TypeInfo_ID_AssetAttributes, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->tracking_id, 0, 196},
  {"variation_number", TypeInfo_ID_AssetAttributes, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->variation_number, 0, 197},
  {"direction", TypeInfo_ID_AssetAttributes, TypeInfo_ID_AssetDirection, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->direction, 0, 198},
  {"move_state", TypeInfo_ID_AssetAttributes, TypeInfo_ID_AssetMoveState, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->move_state, 0, 199},
  {"asset_class", TypeInfo_ID_AssetAttributes, TypeInfo_ID_AssetClass, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->asset_class, 0, 200},
  {"color", TypeInfo_ID_AssetAttributes, TypeInfo_ID_AssetColor, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->color, 0, 201},
  {"bitflags", TypeInfo_ID_AssetAttributes, TypeInfo_ID_u32, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->bitflags, 0, 202},
  {"living_state", TypeInfo_ID_AssetAttributes, TypeInfo_ID_AssetLivingState, MemberKind_value, 0, (size_t)&((AssetAttributes*)0)->living_state, 0, 203},
  {"handle", TypeInfo_ID_TextureAsset, TypeInfo_ID_void, MemberKind_pointer, 0, (size_t)&((TextureAsset*)0)->handle, 0, 204},
  {"left", TypeInfo_ID_TextureAsset, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->left, 0, 205},
  {"right", TypeInfo_ID_TextureAsset, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->right, 0, 206},
  {"top", TypeInfo_ID_TextureAsset, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->top, 0, 207},
  {"bottom", TypeInfo_ID_TextureAsset, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->bottom, 0, 208},
  {"px_width", TypeInfo_ID_TextureAsset, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->px_width, 0, 209},
  {"anchor_x", TypeInfo_ID_TextureAsset, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((TextureAsset*)0)->anchor_x, 0, 210},
  {"ArchiveEntryType_none", TypeInfo_ID_ArchiveEntryType, TypeInfo_ID_i32, MemberKind_enum, 0, 0, 0, 211},
  {"ArchiveEntryType_texture_atlas", TypeInfo_ID_ArchiveEntryType, TypeInfo_ID_i32, MemberKind_enum, 1, 0, 0, 212},
  {"top", TypeInfo_ID_PackedTexture, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((PackedTexture*)0)->top, 0, 213},
  {"anchor_x", TypeInfo_ID_PackedTexture, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((PackedTexture*)0)->anchor_x, 0, 214},
  {"asset_type", TypeInfo_ID_PackedTexture, TypeInfo_ID_AssetType, MemberKind_value, 0, (size_t)&((PackedTexture*)0)->asset_type, 0, 215},
  {"attributes", TypeInfo_ID_PackedTexture, TypeInfo_ID_AssetAttributes, MemberKind_value, 0, (size_t)&((PackedTexture*)0)->attributes, 0, 216},
  {"type", TypeInfo_ID_ArchiveEntryHeader_texture_atlas, TypeInfo_ID_ArchiveEntryType, MemberKind_value, 0, (size_t)&((ArchiveEntryHeader_texture_atlas*)0)->type, 0, 217},
  {"texture_handle", TypeInfo_ID_ArchiveEntryHeader_texture_atlas, TypeInfo_ID_void, MemberKind_pointer, 0, (size_t)&((ArchiveEntryHeader_texture_atlas*)0)->texture_handle, 0, 218},
  {"png_size", TypeInfo_ID_ArchiveEntryHeader_texture_atlas, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ArchiveEntryHeader_texture_atlas*)0)->png_size, 0, 219},
  {"packed_texture_count", TypeInfo_ID_ArchiveEntryHeader_texture_atlas, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ArchiveEntryHeader_texture_atlas*)0)->packed_texture_count, 0, 220},
  {"archive_entry_count", TypeInfo_ID_GameArchiveHeader, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((GameArchiveHeader*)0)->archive_entry_count, 0, 221},
  {"x", TypeInfo_ID_vec2, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((vec2*)0)->x, 0, 222},
  {"y", TypeInfo_ID_vec2, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((vec2*)0)->y, 0, 223},
  {"x", TypeInfo_ID_ivec2, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ivec2*)0)->x, 0, 224},
  {"y", TypeInfo_ID_ivec2, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ivec2*)0)->y, 0, 225},
  {"x", TypeInfo_ID_vec3, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((vec3*)0)->x, 0, 226},
  {"y", TypeInfo_ID_vec3, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((vec3*)0)->y, 0, 227},
  {"z", TypeInfo_ID_vec3, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((vec3*)0)->z, 0, 228},
  {"x", TypeInfo_ID_ivec3, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ivec3*)0)->x, 0, 229},
  {"y", TypeInfo_ID_ivec3, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ivec3*)0)->y, 0, 230},
  {"z", TypeInfo_ID_ivec3, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((ivec3*)0)->z, 0, 231},
  {"bottom_left", TypeInfo_ID_rect2, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((rect2*)0)->bottom_left, 0, 232},
  {"top_right", TypeInfo_ID_rect2, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((rect2*)0)->top_right, 0, 233},
  {"initialized", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->initialized, 0, 234},
  {"highest_entity_id", TypeInfo_ID_GameState, TypeInfo_ID_i64, MemberKind_value, 0, (size_t)&((GameState*)0)->highest_entity_id, 0, 235},
  {"TMP_meat_space", TypeInfo_ID_GameState, TypeInfo_ID_MeatSpace, MemberKind_pointer, 0, (size_t)&((GameState*)0)->TMP_meat_space, 0, 236},
  {"asset_manager", TypeInfo_ID_GameState, TypeInfo_ID_AssetManager, MemberKind_pointer, 0, (size_t)&((GameState*)0)->asset_manager, 0, 237},
  {"perlin_scale", TypeInfo_ID_GameState, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((GameState*)0)->perlin_scale, 0, 238},
  {"editor", TypeInfo_ID_GameState, TypeInfo_ID_Editor, MemberKind_pointer, 0, (size_t)&((GameState*)0)->editor, 0, 239},
  {"dummy_texture", TypeInfo_ID_GameState, TypeInfo_ID_PlatformTexture, MemberKind_value, 0, (size_t)&((GameState*)0)->dummy_texture, 0, 240},
  {"show_grid", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->show_grid, 0, 241},
  {"show_occupied_spaces", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->show_occupied_spaces, 0, 242},
  {"editor_mode", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->editor_mode, 0, 243},
  {"pending_entity_placement_id", TypeInfo_ID_GameState, TypeInfo_ID_MeatSpaceEntityTemplateId, MemberKind_value, 0, (size_t)&((GameState*)0)->pending_entity_placement_id, 0, 244},
  {"draw_path_finding", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->draw_path_finding, 0, 245},
  {"draw_collision_volumes", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->draw_collision_volumes, 0, 246},
  {"step_through_frames", TypeInfo_ID_GameState, TypeInfo_ID_b32, MemberKind_value, 0, (size_t)&((GameState*)0)->step_through_frames, 0, 247},
  {"pending_entity_placement_selection_group", TypeInfo_ID_GameState, TypeInfo_ID_SelectionGroup, MemberKind_value, 0, (size_t)&((GameState*)0)->pending_entity_placement_selection_group, 0, 248},
  {"pending_entity_variation_number", TypeInfo_ID_GameState, TypeInfo_ID_u32, MemberKind_value, 0, (size_t)&((GameState*)0)->pending_entity_variation_number, 0, 249},
  {"x", TypeInfo_ID_GridCell, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((GridCell*)0)->x, 0, 250},
  {"y", TypeInfo_ID_GridCell, TypeInfo_ID_i32, MemberKind_value, 0, (size_t)&((GridCell*)0)->y, 0, 251},
  {"origin", TypeInfo_ID_Grid, TypeInfo_ID_vec2, MemberKind_value, 0, (size_t)&((Grid*)0)->origin, 0, 252},
  {"cell_width", TypeInfo_ID_Grid, TypeInfo_ID_f32, MemberKind_value, 0, (size_t)&((Grid*)0)->cell_width, 0, 253},
  {"main_archive_async_handle", TypeInfo_ID_AssetManager, TypeInfo_ID_void, MemberKind_pointer, 0, (size_t)&((AssetManager*)0)->main_archive_async_handle, 0, 254},
  {"main_archive", TypeInfo_ID_AssetManager, TypeInfo_ID_GameArchiveHeader, MemberKind_pointer, 0, (size_t)&((AssetManager*)0)->main_archive, 0, 255},
  {"main_archive_last_write_time", TypeInfo_ID_AssetManager, TypeInfo_ID_PlatformFileLastWriteTime, MemberKind_value, 0, (size_t)&((AssetManager*)0)->main_archive_last_write_time, 0, 256},
  {"asset_types_to_atlases", TypeInfo_ID_AssetManager, TypeInfo_ID_void, MemberKind_pointer, 0, (size_t)&((AssetManager*)0)->asset_types_to_atlases, 0, 257},
  {"main_atlas", TypeInfo_ID_AssetManager, TypeInfo_ID_ArchiveEntryHeader_texture_atlas, MemberKind_pointer, 0, (size_t)&((AssetManager*)0)->main_atlas, 0, 258},

};

struct TypeInfo {
  TypeInfo_ID id;
  TypeKind kind;
  size_t size;
};

TypeInfo TypeInfo_custom_type_table[] = {
  {TypeInfo_ID_PlatformTexture, TypeKind_struct, sizeof(PlatformTexture)},
  {TypeInfo_ID_PlatformFileLastWriteTime, TypeKind_struct, sizeof(PlatformFileLastWriteTime)},
  {TypeInfo_ID_Editor, TypeKind_struct, sizeof(Editor)},
  {TypeInfo_ID_MeatSpaceCommand_Type, TypeKind_enum, sizeof(MeatSpaceCommand_Type)},
  {TypeInfo_ID_MeatSpaceCommand_move_to, TypeKind_struct, sizeof(MeatSpaceCommand_move_to)},
  {TypeInfo_ID_MeatSpaceCommand, TypeKind_union, sizeof(MeatSpaceCommand)},
  {TypeInfo_ID_MeatSpaceWeapon_Type, TypeKind_enum, sizeof(MeatSpaceWeapon_Type)},
  {TypeInfo_ID_MeatSpaceWeapon_gun, TypeKind_struct, sizeof(MeatSpaceWeapon_gun)},
  {TypeInfo_ID_MeatSpaceWeapon_grenade_launcher, TypeKind_struct, sizeof(MeatSpaceWeapon_grenade_launcher)},
  {TypeInfo_ID_MeatSpaceWeapon_healing_ray, TypeKind_struct, sizeof(MeatSpaceWeapon_healing_ray)},
  {TypeInfo_ID_MeatSpaceWeapon, TypeKind_union, sizeof(MeatSpaceWeapon)},
  {TypeInfo_ID_SelectionGroup, TypeKind_enum, sizeof(SelectionGroup)},
  {TypeInfo_ID_MeatSpaceEntity, TypeKind_struct, sizeof(MeatSpaceEntity)},
  {TypeInfo_ID_MeatSpaceBrain_Type, TypeKind_enum, sizeof(MeatSpaceBrain_Type)},
  {TypeInfo_ID_MeatSpaceBrain_player, TypeKind_struct, sizeof(MeatSpaceBrain_player)},
  {TypeInfo_ID_MeatSpaceBrain, TypeKind_union, sizeof(MeatSpaceBrain)},
  {TypeInfo_ID_MeatSpaceProjectile_Type, TypeKind_enum, sizeof(MeatSpaceProjectile_Type)},
  {TypeInfo_ID_MeatSpaceProjectile_common, TypeKind_struct, sizeof(MeatSpaceProjectile_common)},
  {TypeInfo_ID_MeatSpaceProjectile_entity_targeted, TypeKind_struct, sizeof(MeatSpaceProjectile_entity_targeted)},
  {TypeInfo_ID_MeatSpaceProjectile_position_targeted, TypeKind_struct, sizeof(MeatSpaceProjectile_position_targeted)},
  {TypeInfo_ID_MeatSpaceProjectile, TypeKind_union, sizeof(MeatSpaceProjectile)},
  {TypeInfo_ID_MeatSpaceCamera, TypeKind_struct, sizeof(MeatSpaceCamera)},
  {TypeInfo_ID_PositionGridBucketNode, TypeKind_struct, sizeof(PositionGridBucketNode)},
  {TypeInfo_ID_CollisionVolume_Type, TypeKind_enum, sizeof(CollisionVolume_Type)},
  {TypeInfo_ID_CollisionVolume_common, TypeKind_struct, sizeof(CollisionVolume_common)},
  {TypeInfo_ID_CollisionVolume_box, TypeKind_struct, sizeof(CollisionVolume_box)},
  {TypeInfo_ID_CollisionVolume_circle, TypeKind_struct, sizeof(CollisionVolume_circle)},
  {TypeInfo_ID_CollisionVolume_elipse, TypeKind_struct, sizeof(CollisionVolume_elipse)},
  {TypeInfo_ID_CollisionVolume, TypeKind_union, sizeof(CollisionVolume)},
  {TypeInfo_ID_MeatSpaceEntityTemplateId, TypeKind_enum, sizeof(MeatSpaceEntityTemplateId)},
  {TypeInfo_ID_MeatSpaceEntityTemplate, TypeKind_struct, sizeof(MeatSpaceEntityTemplate)},
  {TypeInfo_ID_MeatSpaceEntityTemplateCollection, TypeKind_struct, sizeof(MeatSpaceEntityTemplateCollection)},
  {TypeInfo_ID_MeatSpace, TypeKind_struct, sizeof(MeatSpace)},
  {TypeInfo_ID_AssetType, TypeKind_enum, sizeof(AssetType)},
  {TypeInfo_ID_AssetDirection, TypeKind_enum, sizeof(AssetDirection)},
  {TypeInfo_ID_AssetMoveState, TypeKind_enum, sizeof(AssetMoveState)},
  {TypeInfo_ID_AssetLivingState, TypeKind_enum, sizeof(AssetLivingState)},
  {TypeInfo_ID_AssetClass, TypeKind_enum, sizeof(AssetClass)},
  {TypeInfo_ID_AssetColor, TypeKind_enum, sizeof(AssetColor)},
  {TypeInfo_ID_AssetAttributes, TypeKind_struct, sizeof(AssetAttributes)},
  {TypeInfo_ID_TextureAsset, TypeKind_struct, sizeof(TextureAsset)},
  {TypeInfo_ID_ArchiveEntryType, TypeKind_enum, sizeof(ArchiveEntryType)},
  {TypeInfo_ID_PackedTexture, TypeKind_struct, sizeof(PackedTexture)},
  {TypeInfo_ID_ArchiveEntryHeader_texture_atlas, TypeKind_struct, sizeof(ArchiveEntryHeader_texture_atlas)},
  {TypeInfo_ID_GameArchiveHeader, TypeKind_struct, sizeof(GameArchiveHeader)},
  {TypeInfo_ID_vec2, TypeKind_struct, sizeof(vec2)},
  {TypeInfo_ID_ivec2, TypeKind_struct, sizeof(ivec2)},
  {TypeInfo_ID_vec3, TypeKind_struct, sizeof(vec3)},
  {TypeInfo_ID_ivec3, TypeKind_struct, sizeof(ivec3)},
  {TypeInfo_ID_rect2, TypeKind_struct, sizeof(rect2)},
  {TypeInfo_ID_GameState, TypeKind_struct, sizeof(GameState)},
  {TypeInfo_ID_TransientState, TypeKind_struct, sizeof(TransientState)},
  {TypeInfo_ID_GridCell, TypeKind_struct, sizeof(GridCell)},
  {TypeInfo_ID_Grid, TypeKind_struct, sizeof(Grid)},
  {TypeInfo_ID_AssetManager, TypeKind_struct, sizeof(AssetManager)},

};

struct UnionMemberInfo {
  TypeInfo_ID union_type_id;
  i32 type;
  TypeInfo_ID union_member_type_id;
};

UnionMemberInfo TypeInfo_union_member_table[] = {
  {TypeInfo_ID_MeatSpaceCommand, MeatSpaceCommand_Type_move_to, TypeInfo_ID_MeatSpaceCommand_move_to},
  {TypeInfo_ID_MeatSpaceWeapon, MeatSpaceWeapon_Type_gun, TypeInfo_ID_MeatSpaceWeapon_gun},
  {TypeInfo_ID_MeatSpaceWeapon, MeatSpaceWeapon_Type_grenade_launcher, TypeInfo_ID_MeatSpaceWeapon_grenade_launcher},
  {TypeInfo_ID_MeatSpaceWeapon, MeatSpaceWeapon_Type_healing_ray, TypeInfo_ID_MeatSpaceWeapon_healing_ray},
  {TypeInfo_ID_MeatSpaceBrain, MeatSpaceBrain_Type_player, TypeInfo_ID_MeatSpaceBrain_player},
  {TypeInfo_ID_MeatSpaceProjectile, MeatSpaceProjectile_Type_common, TypeInfo_ID_MeatSpaceProjectile_common},
  {TypeInfo_ID_MeatSpaceProjectile, MeatSpaceProjectile_Type_entity_targeted, TypeInfo_ID_MeatSpaceProjectile_entity_targeted},
  {TypeInfo_ID_MeatSpaceProjectile, MeatSpaceProjectile_Type_position_targeted, TypeInfo_ID_MeatSpaceProjectile_position_targeted},
  {TypeInfo_ID_CollisionVolume, CollisionVolume_Type_common, TypeInfo_ID_CollisionVolume_common},
  {TypeInfo_ID_CollisionVolume, CollisionVolume_Type_box, TypeInfo_ID_CollisionVolume_box},
  {TypeInfo_ID_CollisionVolume, CollisionVolume_Type_circle, TypeInfo_ID_CollisionVolume_circle},
  {TypeInfo_ID_CollisionVolume, CollisionVolume_Type_elipse, TypeInfo_ID_CollisionVolume_elipse},
};
